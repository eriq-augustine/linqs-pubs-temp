{
    "type": "book",
    "authors": [
        "Indrajit Bhattacharya",
        "Lise Getoor"
    ],
    "title": "Entity Resolutions in Graphs",
    "venue": "Book",
    "year": "2006",
    "publisher": "Wiley",
    "pages": "311--344",
    "volume": "1",
    "chapter": "13",
    "editor": "Diane Cook and Lawrence Holder",
    "organization": "Wiley",
    "series": "Mining Graph Data",
    "edition": "1",
    "links": [],
    "abstract": "<p>In many applications, there are a variety of ways of referring to the same underlying real-world entity. For example, J. Doe, Jonathan Doe, and Jon Doe may all refer to the same person. In addition, entity references may be linked or grouped together. For example, Jonathan Doe may be married to Jeanette Doe and may have dependents James Doe, Jason Doe, and Jacqueline Doe, and Jon Doe may be married to Jean Doe and J. Doe may have dependents Jim Doe, Jason Doe, and Jackie Doe. Given such data, we can build a graph from the entity references, where the nodes are the entity references and edges (or often hyperedges) in the graph indicate links among the references.</p>\n<p>However, the problem is that for any real-world entity there may well be more than one node in the graph that refers to that entity. In the example above, we may have three nodes all referring to the individual Jonathan Doe, two nodes referring to Jeanette Doe, two nodes referring to each of James Doe, Jason Doe, and Jacqueline Doe. Further, because the edges are defined over entity references, rather than entities themselves, the graph does not accurately reflect the relationships between entities. For example, until we realize that Jon Doe refers to the same person as Jonathan Doe, we may not think that Jon Doe has any children, and until we realize that J. Doe refers to the same person as Jonathan Doe, we will not realize that he is married.</p>"
}